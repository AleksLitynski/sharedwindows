{
  "name": "hackpad",
  "version": "0.0.3",
  "engines": {
    "node": ">= 0.6.9"
  },
  "description": "A client library for the Hackpad API",
  "directories": {
    "lib": "./lib"
  },
  "dependencies": {
    "oauth-client": "~0.3.0",
    "underscore": "~1.4.4"
  },
  "main": "./lib/hackpad",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/lkosak/node-hackpad.git"
  },
  "author": {
    "name": "Lou Kosak",
    "email": "lkosak@gmail.com"
  },
  "license": "BSD",
  "readme": "#Overview\nA client library for the Hackpad API (Version 1.0)\n\nMake sure to check out the official [Hackpad API documentation](https://hackpad.com/Hackpad-API-v1.0-k9bpcEeOo2Q).\n\n#Requirements\n\n[oauth-client](https://github.com/unscene/node-oauth)\n\n[underscore](http://underscorejs.org/)\n\n(Sorry about the underscore req. It's just for an object merge, and I'll definitely\naccept a pull request that eliminates the need for it).\n\n#Installation\nClone from here, or install with npm:\n\n    npm install hackpad\n\nInclude in your app:\n\n    var Hackpad = require('hackpad');\n\n#Usage\n\nInstantiate the client with your Hackpad Oauth client ID and secret (You can find them on your [account page](https://hackpad.com/ep/account/)).\n\n    var client = new Hackpad(client_id, secret, [options]);\n\nThen, just run commands on your fancy new client:\n\n    client.create(\"This is an awesome hackpad\");\n\nAll methods accept a [callback] function in the usual format:\n\n    client.create(\"I like this hackpad even more\", function(err, result) {\n      if(err) { return console.log(\"Oh crap!\"); }\n      // do something...\n    });\n\nJSON responses are parsed automatically for you, so this would work:\n\n    client.create(\"I should stop creating new hackpads\", function(err, resp) {\n      console.log(resp.padId);\n    });\n\nFor non-JSON responses (just `export` at this point), the raw body is returned.\n\n## Options\n\nAn optional options dictionary can be passed to the client.\n\n`site` custom site (e.g., \"mycompany\" if your Hackpad site is mycompany.hackpad.com)\n\n## Methods\n\nThis client supports all the API endpoints described in the [Hackpad API documentation](https://hackpad.com/Hackpad-API-v1.0-k9bpcEeOo2Q). Details:\n\n### create\n    client.create(body, format, [callback])\n\n`body` a string of body text\n\n`format` 'text/html', 'text/x-web-markdown', 'text/plain' (default 'text/html')\n\n### import\n    client.import(padId, body, format, [callback])\n\n`padId` ID of an existing (or not-existing) pad\n\n`body` a string of body text\n\n`format` 'text/html', 'text/x-web-markdown', 'text/plain' (default: 'text/html')\n\n### revert\n    client.revert(padId, revisionId, [callback])\n\n### export\n    client.export(padId, format, [callback])\n\n`padId` ID of an existing pad\n\n`format` 'html', 'md', 'txt' (default: 'html')\n\n### editedSince\n    client.editedSince(timestamp, [callback])\n\n`padId` ID of an existing pad\n\n`timestamp` Accepts either a unix timestamp (int) or a Date object\n\n### revisions\n    client.revisions(padId, [callback])\n\n`padId` ID of an existing pad\n\n### revokeAccess\n    client.revokeAccess(email, [callback])\n\n`email` Email address of the user to revoke access for\n\n### removeUser\n    client.removeUser(email, [callback])\n\n`email` Email address of the user to remove\n\n### setEmailEnabled\n    client.setEmailEnabled(email, setting, [callback])\n\n`email` Email address of the user to update\n\n`setting` true or false\n\n### search\n    client.search(term, [start], [limit], [callback])\n\n`terms` Search terms\n\n`start` Offset to start from\n\n`limit` How many results to return\n\n### list\n    client.list([callback])\n\n# Tests\nCurrently no tests. I am ashamed. Please feel free to write some!\n\n# License\n\n(The MIT License)\n\nCopyright (c) 2013 Lou Kosak &lt;lkosak [at] gmail [dot] com&gt;\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lkosak/node-hackpad/issues"
  },
  "_id": "hackpad@0.0.3",
  "dist": {
    "shasum": "9a9eaaa170653f9097600fa2c0d1c6444c4c30ba"
  },
  "_from": "hackpad@",
  "_resolved": "https://registry.npmjs.org/hackpad/-/hackpad-0.0.3.tgz"
}
